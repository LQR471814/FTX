syntax = "proto3";

option go_package = "ftx/backend/api";
package api;

service Backend {
	rpc GetSelf (Empty) returns (SelfResponse) {}

	rpc GetSetup (Empty) returns (GetSetupResponse) {}
	rpc SetSetup (SetSetupRequest) returns (Empty) {}

	rpc ListenUsers (Empty) returns (stream UsersResponse) {}
	rpc ListenMessages (Empty) returns (stream Message) {}
	rpc ListenTransferRequests (Empty) returns (stream TransferRequest) {}
	rpc ListenTransferStates (Empty) returns (stream TransferState) {}
	rpc TransferChoice (TransferChoiceRequest) returns (Empty) {}
	rpc SendMessage (MessageRequest) returns (Empty) {}

	rpc Quit (Empty) returns (Empty) {}
}

message File {
	string name = 1;
	int64 size = 2;
	string type = 3;
}

message TransferChoiceRequest {
	string id = 1;
	bool accept = 2;
}

message TransferState {
	string id = 1;
	int32 currentfile = 2;
	int64 received = 3;
}

message TransferRequest {
	string id = 3;
	User from = 1;
	repeated File files = 2;
}

message User {
	string ip = 1;
	string name = 2;
	int32 fileport = 3;
}

message Message {
	User author = 1;
	string contents = 2;
}

message Empty {}

message SelfResponse {
	string hostname = 1;
}

message GetSetupResponse {
	bool required = 1;
	repeated NetworkInterface interfaces = 2;
}

message SetSetupRequest {
	NetworkInterface interface = 1;
}

message MessageRequest {
	User to = 1;
	Message message = 2;
}

message UsersResponse {
	repeated User users = 1;
}

message NetworkInterface {
	int32 index = 1;
	string address = 2;
	string name = 3;
}